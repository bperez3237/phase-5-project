{"version":3,"file":"index.js","sources":["../src/constants.jsx","../src/index.tsx"],"sourcesContent":["// Texts\r\nexport const headerDefault = 'Warning'\r\nexport const btnTextDefault = 'Close'\r\n\r\n// Colors\r\nexport const errorColor = 'rgb(220, 53, 69)' //'#dc3545'\r\nexport const warningColor = 'rgb(255, 193, 7)' //'#28a745'\r\nexport const successColor = 'rgb(40, 167, 69)' //'#ffc107'\r\n","import React, { useEffect } from 'react'\nimport {\n  headerDefault,\n  btnTextDefault,\n  errorColor,\n  successColor,\n  warningColor\n} from './constants'\nimport './styles.scss'\n\ninterface AlertProps {\n  text: string\n  onClosePress: Function\n  show: boolean\n  header?: string | undefined\n  btnText?: string | undefined\n  showBorderBottom?: boolean\n  type?: string\n  color?: string\n  pressCloseOnOutsideClick?: boolean\n  alertStyles?: object\n  headerStyles?: object\n  textStyles?: object\n  buttonStyles?: object\n}\n\nconst AlertReact = ({\n  // text\n  header = headerDefault,\n  btnText = btnTextDefault,\n  text,\n  // visuals\n  show = false,\n  showBorderBottom = true,\n  type,\n  color,\n  // functions\n  onClosePress,\n  pressCloseOnOutsideClick = true,\n  // styles\n  alertStyles = {},\n  headerStyles = {},\n  textStyles = {},\n  buttonStyles = {}\n}: AlertProps) => {\n  /* LIFECYCLE METHODS */\n  const handleClickOutsideAlert = (e: Event): void => {\n    if (show) {\n      const target = e?.target as HTMLInputElement\n      if (target?.className === 'backdrop') {\n        onClosePressClick()\n      }\n    }\n  }\n\n  useEffect(() => {\n    // Add event listener if it is shown\n    if (pressCloseOnOutsideClick && show) {\n      document.addEventListener('mousedown', handleClickOutsideAlert)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideAlert)\n    }\n  }, [show])\n\n  /* LISTENER FUNCTIONS */\n\n  const onClosePressClick = () => {\n    document.removeEventListener('mousedown', handleClickOutsideAlert)\n    onClosePress()\n  }\n\n  /* GET DATA */\n\n  const getColor = () => {\n    if (color) {\n      return color\n    } else if (type === 'error') return errorColor\n    else if (type === 'success') return successColor\n    else if (type === 'warning') return warningColor\n    else return '#333'\n  }\n  const colorToUse = getColor()\n\n  const getAlertStyle = () => {\n    if (showBorderBottom) {\n      return { borderBottom: '3px solid' + colorToUse + '', ...alertStyles }\n    } else {\n      return alertStyles\n    }\n  }\n\n  return (\n    <div>\n      {show ? (\n        <div role='alert'>\n          <div className='backdrop' />\n          <div className='alert-main' style={getAlertStyle()}>\n            <h3 className='alert-header' style={headerStyles}>\n              {header}\n            </h3>\n            <p className='alert-body' style={textStyles}>\n              {text}\n            </p>\n            <a\n              onClick={() => onClosePressClick()}\n              className='alert-button'\n              role='button'\n              style={{ backgroundColor: colorToUse, ...buttonStyles }}\n              href='#'\n            >\n              {btnText}\n            </a>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default AlertReact\n"],"names":["headerDefault","btnTextDefault","errorColor","warningColor","successColor","AlertReact","header","btnText","text","show","showBorderBottom","type","color","onClosePress","pressCloseOnOutsideClick","alertStyles","headerStyles","textStyles","buttonStyles","handleClickOutsideAlert","e","target","className","onClosePressClick","useEffect","document","addEventListener","removeEventListener","getColor","colorToUse","getAlertStyle","borderBottom","React","role","style","onClick","backgroundColor","href"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACO,IAAMA,aAAa,GAAG,SAAtB;AACA,IAAMC,cAAc,GAAG,OAAvB;AAGA,IAAMC,UAAU,GAAG,kBAAnB;AACA,IAAMC,YAAY,GAAG,kBAArB;AACA,IAAMC,YAAY,GAAG,kBAArB;;ACmBP,IAAMC,UAAU,GAAG,SAAbA,UAAa;yBAEjBC;MAAAA,kCAASN;0BACTO;MAAAA,oCAAUN;MACVO,YAAAA;uBAEAC;MAAAA,8BAAO;mCACPC;MAAAA,sDAAmB;MACnBC,YAAAA;MACAC,aAAAA;MAEAC,oBAAAA;mCACAC;MAAAA,8DAA2B;8BAE3BC;MAAAA,4CAAc;+BACdC;MAAAA,8CAAe;6BACfC;MAAAA,0CAAa;+BACbC;MAAAA,8CAAe;;AAGf,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,CAAD;AAC9B,QAAIX,IAAJ,EAAU;AACR,UAAMY,MAAM,GAAGD,CAAH,aAAGA,CAAH,uBAAGA,CAAC,CAAEC,MAAlB;;AACA,UAAI,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,SAAR,MAAsB,UAA1B,EAAsC;AACpCC,QAAAA,iBAAiB;AAClB;AACF;AACF,GAPD;;AASAC,EAAAA,eAAS,CAAC;AAER,QAAIV,wBAAwB,IAAIL,IAAhC,EAAsC;AACpCgB,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,uBAAvC;AACD;;AAED,WAAO;AACLM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,uBAA1C;AACD,KAFD;AAGD,GATQ,EASN,CAACV,IAAD,CATM,CAAT;;AAaA,MAAMc,iBAAiB,GAAG,SAApBA,iBAAoB;AACxBE,IAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,uBAA1C;AACAN,IAAAA,YAAY;AACb,GAHD;;AAOA,MAAMe,QAAQ,GAAG,SAAXA,QAAW;AACf,QAAIhB,KAAJ,EAAW;AACT,aAAOA,KAAP;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,OAAb,EAAsB,OAAOT,UAAP,CAAtB,KACF,IAAIS,IAAI,KAAK,SAAb,EAAwB,OAAOP,YAAP,CAAxB,KACA,IAAIO,IAAI,KAAK,SAAb,EAAwB,OAAOR,YAAP,CAAxB,KACA,OAAO,MAAP;AACN,GAPD;;AAQA,MAAM0B,UAAU,GAAGD,QAAQ,EAA3B;;AAEA,MAAME,aAAa,GAAG,SAAhBA,aAAgB;AACpB,QAAIpB,gBAAJ,EAAsB;AACpB;AAASqB,QAAAA,YAAY,EAAE,cAAcF,UAAd,GAA2B;AAAlD,SAAyDd,WAAzD;AACD,KAFD,MAEO;AACL,aAAOA,WAAP;AACD;AACF,GAND;;AAQA,SACEiB,4BAAA,MAAA,MAAA,EACGvB,IAAI,GACHuB,4BAAA,MAAA;AAAKC,IAAAA,IAAI,EAAC;GAAV,EACED,4BAAA,MAAA;AAAKV,IAAAA,SAAS,EAAC;GAAf,CADF,EAEEU,4BAAA,MAAA;AAAKV,IAAAA,SAAS,EAAC;AAAaY,IAAAA,KAAK,EAAEJ,aAAa;GAAhD,EACEE,4BAAA,KAAA;AAAIV,IAAAA,SAAS,EAAC;AAAeY,IAAAA,KAAK,EAAElB;GAApC,EACGV,MADH,CADF,EAIE0B,4BAAA,IAAA;AAAGV,IAAAA,SAAS,EAAC;AAAaY,IAAAA,KAAK,EAAEjB;GAAjC,EACGT,IADH,CAJF,EAOEwB,4BAAA,IAAA;AACEG,IAAAA,OAAO,EAAE;AAAA,aAAMZ,iBAAiB,EAAvB;AAAA;AACTD,IAAAA,SAAS,EAAC;AACVW,IAAAA,IAAI,EAAC;AACLC,IAAAA,KAAK;AAAIE,MAAAA,eAAe,EAAEP;AAArB,OAAoCX,YAApC;AACLmB,IAAAA,IAAI,EAAC;GALP,EAOG9B,OAPH,CAPF,CAFF,CADG,GAqBD,IAtBN,CADF;AA0BD,CA7FD;;;;"}