{"version":3,"file":"index.modern.js","sources":["../src/constants.jsx","../src/index.tsx"],"sourcesContent":["// Texts\nexport const headerDefault = 'Warning' // warning text\nexport const btnTextDefault = 'Close' // button text\n\n// Colors\nexport const errorColor = 'rgb(220, 53, 69)' // '#dc3545'\nexport const warningColor = 'rgb(255, 193, 7)' // '#28a745'\nexport const successColor = 'rgb(40, 167, 69)' // '#ffc107'\nexport const defaultColor = 'rgb(51, 51, 51)' // '#333'\n","import React, { useEffect } from 'react'\nimport {\n  headerDefault,\n  btnTextDefault,\n  defaultColor,\n  errorColor,\n  successColor,\n  warningColor\n} from './constants'\nimport './styles.scss'\n\ninterface AlertProps {\n  text: string\n  onClosePress: Function\n  show: boolean\n  header?: string | undefined\n  btnText?: string | undefined\n  showBorderBottom?: boolean\n  type?: string\n  color?: string\n  pressCloseOnOutsideClick?: boolean\n  alertStyles?: object\n  headerStyles?: object\n  textStyles?: object\n  buttonStyles?: object\n}\n\nconst AlertReact = ({\n  // text\n  header = headerDefault,\n  btnText = btnTextDefault,\n  text,\n  // visuals\n  show,\n  showBorderBottom,\n  type,\n  color,\n  // functions\n  onClosePress,\n  pressCloseOnOutsideClick = true,\n  // styles\n  alertStyles = {},\n  headerStyles = {},\n  textStyles = {},\n  buttonStyles = {}\n}: AlertProps) => {\n  /* LIFECYCLE METHODS */\n\n  useEffect(() => {\n    // Add event listener if it is shown\n    if (pressCloseOnOutsideClick && show) {\n      document.addEventListener('mousedown', handleClickOutsideAlert)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideAlert)\n    }\n  }, [show])\n\n  /* LISTENER FUNCTIONS */\n\n  const handleClickOutsideAlert = (e: Event): void => {\n    if (show) {\n      const target = e?.target as HTMLInputElement\n      if (target?.className === 'backdrop') {\n        onClosePressClick()\n      }\n    }\n  }\n\n  const onClosePressClick = () => {\n    document.removeEventListener('mousedown', handleClickOutsideAlert)\n    onClosePress()\n  }\n\n  /* GET DATA */\n\n  const getColor = () => {\n    if (color) {\n      return color\n    } else if (type === 'error') return errorColor\n    else if (type === 'success') return successColor\n    else if (type === 'warning') return warningColor\n    else return defaultColor\n  }\n  const colorToUse = getColor()\n\n  const getAlertStyle = () => {\n    if (showBorderBottom === false) {\n      return alertStyles\n    } else {\n      return { borderBottom: `3px solid ${colorToUse}`, ...alertStyles }\n    }\n  }\n\n  return (\n    <div className='alert-container'>\n      {show ? (\n        <div role='alert'>\n          <div className='backdrop' />\n          <div className='alert-main' style={getAlertStyle()}>\n            <h3 className='alert-header' style={headerStyles}>\n              {header}\n            </h3>\n            <p className='alert-body' style={textStyles}>\n              {text}\n            </p>\n            <a\n              onClick={() => onClosePressClick()}\n              className='alert-button'\n              role='button'\n              style={{ backgroundColor: colorToUse, ...buttonStyles }}\n              href='#'\n            >\n              {btnText}\n            </a>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default AlertReact\n"],"names":["headerDefault","btnTextDefault","errorColor","warningColor","successColor","defaultColor","AlertReact","header","btnText","text","show","showBorderBottom","type","color","onClosePress","pressCloseOnOutsideClick","alertStyles","headerStyles","textStyles","buttonStyles","useEffect","document","addEventListener","handleClickOutsideAlert","removeEventListener","e","target","className","onClosePressClick","getColor","colorToUse","getAlertStyle","borderBottom","React","role","style","onClick","backgroundColor","href"],"mappings":"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"}